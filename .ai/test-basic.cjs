/**
 * 🧪 Basic Test for .ai Workspace
 * Testa a estrutura básica sem dependências externas
 */

const fs = require("fs");
const path = require("path");

console.log("🤖 Testing .ai Workspace Basic Structure...\n");

// Test 1: Verify directory structure
const expectedDirs = [
  "visual-intelligence",
  "cursor-integration",
  "intelligence",
  "automation",
  "workflows",
  "config",
  "outputs",
  "outputs/screenshots",
  "outputs/reports",
  "outputs/insights",
  "outputs/logs",
];

console.log("📁 Testing directory structure:");
expectedDirs.forEach((dir) => {
  const exists = fs.existsSync(path.join(__dirname, dir));
  console.log(`   ${exists ? "✅" : "❌"} ${dir}`);
});

// Test 2: Verify core files
const expectedFiles = [
  "package.json",
  "ai.config.js",
  "README.md",
  "visual-intelligence/dashboard-watcher.js",
  "cursor-integration/commands.js",
];

console.log("\n📄 Testing core files:");
expectedFiles.forEach((file) => {
  const exists = fs.existsSync(path.join(__dirname, file));
  console.log(`   ${exists ? "✅" : "❌"} ${file}`);
});

// Test 3: Try to load modules
console.log("\n🔧 Testing module loading:");

try {
  const config = require("./ai.config.js");
  console.log("   ✅ ai.config.js loaded successfully");
  console.log(`   ✅ Version: ${config.default?.version || "N/A"}`);
} catch (error) {
  console.log("   ❌ ai.config.js failed to load:", error.message);
}

try {
  const Commands = require("./cursor-integration/commands.js");
  console.log("   ✅ commands.js loaded successfully");

  const commands = new Commands();
  console.log("   ✅ CursorCommands instance created");
} catch (error) {
  console.log("   ❌ commands.js failed to load:", error.message);
}

// Test 4: Create a simple mock report
console.log("\n📊 Testing report generation:");

try {
  const reportsDir = path.join(__dirname, "outputs/reports");
  if (!fs.existsSync(reportsDir)) {
    fs.mkdirSync(reportsDir, { recursive: true });
  }

  const testReport = `# 🧪 Test Report

**Generated:** ${new Date().toISOString()}
**Status:** Testing Mode

## Test Results
- Directory structure: ✅ OK
- Core files: ✅ OK  
- Module loading: ✅ OK
- Report generation: ✅ OK

## Next Steps
1. Install dependencies: \`npm install\`
2. Test health-insight: \`npm run health-insight\`
3. Test visual-check: \`npm run visual-check\`

---
*Generated by .ai workspace test suite*
`;

  const reportPath = path.join(reportsDir, "test-report.md");
  fs.writeFileSync(reportPath, testReport);

  console.log("   ✅ Test report generated successfully");
  console.log(`   📄 Report saved: ${reportPath}`);
} catch (error) {
  console.log("   ❌ Report generation failed:", error.message);
}

console.log("\n🎉 Basic structure test completed!");
console.log("\n💡 Next steps:");
console.log("   1. Install dependencies: npm install");
console.log("   2. Test health command: npm run health-insight");
console.log("   3. Test visual command: npm run visual-check");
console.log("\n🚀 Welcome to the AI-powered development workspace!");
